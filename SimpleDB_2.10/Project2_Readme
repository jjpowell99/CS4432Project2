READ ME
Andrew Nolan and Jackson Powell
-----------------------------------
Installing our Modified simpledb
-----------------------------------
The modified version of SimpleDB is installed and functions in
the same way as the original SimpleDB program. But with our
optimized indexing feature as an option.

Installing:
	The code for the simpledb is contained in the zip file,
	simply import the project into eclipse as an 'already
	existing project'

In order to run SimpleDB:
	1. Run Startup.java with a parameter describing the name of 
	the working directory for the SimpleDB server. The Startup.java 
	file can be found under the simpledb.server package in the src folder. 
	2. The database may then be interacted with through the studentClient/simpledb folder by either:
		a. Running set commands in the java files found in the , 
		other than SQLInterpreter.java. 
			- The program of set commands to demonstrate SimpleDB functionality for task 1 
			of CS 4432 Project 1 is Example.java in this folder. 
			- The program used to produce the testing output and results is Testing.java
		b. Running SQLInterpreter.java may be run from this location to provide a prompt, where a subset 
		of SQL may be directly entered to interact with database.  

Simpledb will run as it normally does in order to use our additional features one must
create an index on a table to do this, create a table and then run the SQL:
create [IndexType] index [IndexName] on [TableName] ([FieldName])”.The type of the index must be{sh, bt, or eh}

-----------------------------------
Running our tests
-----------------------------------
To run our tests simply startup SimpleDB and then in the studentClient/simpledb folder run the file CreateTestTables.java.
This file will generate 4 tables each with 5000 records. One with no index, one with a static hashing index, one with our 
extensible hash index, and one with a BTree index. It will also generate a non-indexed 2500 record table to test joins 
with the indexed tables. There are four more test files: ExtensibleHashTest.java, NoIndexTest.java, BTreeIndexTest.java, 
and StaticHashTest.java. Each of these files will perform the same tests on the different tables. You can run them to 
compare the results. The times are printed out by these test files. The I/O’s are printed out in startup.java’s console.


-----------------------------------
Files we Modified/Added
-----------------------------------
--All changes can be viewed in the Diff file--

simpledb.buffer.BasicBufferMgr.java
simpledb.buffer.BufferMgr.java
simpledb.buffer.LRUBufferMgr.java

simpledb.index.extensible.ExtensibleHash.java
simpledb.index.extensible.HashBlock.java
simpledb.index.extensible.Node.java

simpledb.index.planner.IndexUpdatePlanner.java

simpledb.metadata.IndexInfo.java
simpledb.metadata.IndexMgr.java
simpledb.metadata.MetadataMgr.java

simpledb.opt.HeuristicQueryPlanner.java

simpledb.parse.CreateIndexData.java
simpledb.parse.Parser.java

simpledb.planner.BasicUpdatePlanner.java

simpledb.record.TableInfo.java

simpledb.server.SimpleDB.java

simpledb.tx.Transaction.java

simpledb.BTreeIndexTest.java
simpledb.CreateTestTables.java
simpledb.CreateTestTables2.java
simpledb.ExtensibleHashTest.java
simpledb.NoIndexTest.java
simpledb.Project2Testing.java
simpledb.StaticHashTest.java

-----------------------------------
Where to view the diff
-----------------------------------
https://github.com/jjpowell99/CS4432Project1/compare/11543150515ab6ef51c817b459e5e863096eb278...master